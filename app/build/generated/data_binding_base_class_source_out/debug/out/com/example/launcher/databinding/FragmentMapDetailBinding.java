// Generated by view binder compiler. Do not edit!
package com.example.launcher.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.launcher.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentMapDetailBinding implements ViewBinding {
  @NonNull
  private final CoordinatorLayout rootView;

  @NonNull
  public final TextView mapDetailDescription;

  @NonNull
  public final ImageView mapDetailImage;

  @NonNull
  public final TextView mapDetailName;

  private FragmentMapDetailBinding(@NonNull CoordinatorLayout rootView,
      @NonNull TextView mapDetailDescription, @NonNull ImageView mapDetailImage,
      @NonNull TextView mapDetailName) {
    this.rootView = rootView;
    this.mapDetailDescription = mapDetailDescription;
    this.mapDetailImage = mapDetailImage;
    this.mapDetailName = mapDetailName;
  }

  @Override
  @NonNull
  public CoordinatorLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentMapDetailBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentMapDetailBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_map_detail, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentMapDetailBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.mapDetailDescription;
      TextView mapDetailDescription = ViewBindings.findChildViewById(rootView, id);
      if (mapDetailDescription == null) {
        break missingId;
      }

      id = R.id.mapDetailImage;
      ImageView mapDetailImage = ViewBindings.findChildViewById(rootView, id);
      if (mapDetailImage == null) {
        break missingId;
      }

      id = R.id.mapDetailName;
      TextView mapDetailName = ViewBindings.findChildViewById(rootView, id);
      if (mapDetailName == null) {
        break missingId;
      }

      return new FragmentMapDetailBinding((CoordinatorLayout) rootView, mapDetailDescription,
          mapDetailImage, mapDetailName);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
