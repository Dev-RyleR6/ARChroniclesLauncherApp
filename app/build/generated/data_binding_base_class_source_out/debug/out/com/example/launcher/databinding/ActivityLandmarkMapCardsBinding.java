// Generated by view binder compiler. Do not edit!
package com.example.launcher.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.fragment.app.FragmentContainerView;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.launcher.R;
import com.google.android.material.appbar.MaterialToolbar;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityLandmarkMapCardsBinding implements ViewBinding {
  @NonNull
  private final CoordinatorLayout rootView;

  @NonNull
  public final FrameLayout fragmentContainer;

  @NonNull
  public final FragmentContainerView navHostFragment;

  @NonNull
  public final RecyclerView recyclerViewLandmarkCards;

  @NonNull
  public final MaterialToolbar topAppBar;

  private ActivityLandmarkMapCardsBinding(@NonNull CoordinatorLayout rootView,
      @NonNull FrameLayout fragmentContainer, @NonNull FragmentContainerView navHostFragment,
      @NonNull RecyclerView recyclerViewLandmarkCards, @NonNull MaterialToolbar topAppBar) {
    this.rootView = rootView;
    this.fragmentContainer = fragmentContainer;
    this.navHostFragment = navHostFragment;
    this.recyclerViewLandmarkCards = recyclerViewLandmarkCards;
    this.topAppBar = topAppBar;
  }

  @Override
  @NonNull
  public CoordinatorLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityLandmarkMapCardsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityLandmarkMapCardsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_landmark_map_cards, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityLandmarkMapCardsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.fragmentContainer;
      FrameLayout fragmentContainer = ViewBindings.findChildViewById(rootView, id);
      if (fragmentContainer == null) {
        break missingId;
      }

      id = R.id.nav_host_fragment;
      FragmentContainerView navHostFragment = ViewBindings.findChildViewById(rootView, id);
      if (navHostFragment == null) {
        break missingId;
      }

      id = R.id.recyclerViewLandmarkCards;
      RecyclerView recyclerViewLandmarkCards = ViewBindings.findChildViewById(rootView, id);
      if (recyclerViewLandmarkCards == null) {
        break missingId;
      }

      id = R.id.topAppBar;
      MaterialToolbar topAppBar = ViewBindings.findChildViewById(rootView, id);
      if (topAppBar == null) {
        break missingId;
      }

      return new ActivityLandmarkMapCardsBinding((CoordinatorLayout) rootView, fragmentContainer,
          navHostFragment, recyclerViewLandmarkCards, topAppBar);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
