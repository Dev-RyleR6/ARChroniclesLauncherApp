// Generated by view binder compiler. Do not edit!
package com.example.launcher.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import androidx.viewpager2.widget.ViewPager2;
import com.example.launcher.R;
import com.google.android.material.appbar.MaterialToolbar;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.card.MaterialCardView;
import com.google.android.material.floatingactionbutton.FloatingActionButton;
import com.google.android.material.tabs.TabLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentLandmarkDetailBinding implements ViewBinding {
  @NonNull
  private final CoordinatorLayout rootView;

  @NonNull
  public final MaterialButton btnLoadMore;

  @NonNull
  public final FloatingActionButton fabMap;

  @NonNull
  public final TabLayout imageTabLayout;

  @NonNull
  public final ViewPager2 imageViewPager;

  @NonNull
  public final TextView landmarkDescription;

  @NonNull
  public final TextView landmarkHistory;

  @NonNull
  public final TextView landmarkLocation;

  @NonNull
  public final TextView landmarkTitle;

  @NonNull
  public final MaterialToolbar toolbar;

  @NonNull
  public final MaterialCardView webDataCard;

  @NonNull
  public final TextView webDataContent;

  private FragmentLandmarkDetailBinding(@NonNull CoordinatorLayout rootView,
      @NonNull MaterialButton btnLoadMore, @NonNull FloatingActionButton fabMap,
      @NonNull TabLayout imageTabLayout, @NonNull ViewPager2 imageViewPager,
      @NonNull TextView landmarkDescription, @NonNull TextView landmarkHistory,
      @NonNull TextView landmarkLocation, @NonNull TextView landmarkTitle,
      @NonNull MaterialToolbar toolbar, @NonNull MaterialCardView webDataCard,
      @NonNull TextView webDataContent) {
    this.rootView = rootView;
    this.btnLoadMore = btnLoadMore;
    this.fabMap = fabMap;
    this.imageTabLayout = imageTabLayout;
    this.imageViewPager = imageViewPager;
    this.landmarkDescription = landmarkDescription;
    this.landmarkHistory = landmarkHistory;
    this.landmarkLocation = landmarkLocation;
    this.landmarkTitle = landmarkTitle;
    this.toolbar = toolbar;
    this.webDataCard = webDataCard;
    this.webDataContent = webDataContent;
  }

  @Override
  @NonNull
  public CoordinatorLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentLandmarkDetailBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentLandmarkDetailBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_landmark_detail, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentLandmarkDetailBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnLoadMore;
      MaterialButton btnLoadMore = ViewBindings.findChildViewById(rootView, id);
      if (btnLoadMore == null) {
        break missingId;
      }

      id = R.id.fabMap;
      FloatingActionButton fabMap = ViewBindings.findChildViewById(rootView, id);
      if (fabMap == null) {
        break missingId;
      }

      id = R.id.imageTabLayout;
      TabLayout imageTabLayout = ViewBindings.findChildViewById(rootView, id);
      if (imageTabLayout == null) {
        break missingId;
      }

      id = R.id.imageViewPager;
      ViewPager2 imageViewPager = ViewBindings.findChildViewById(rootView, id);
      if (imageViewPager == null) {
        break missingId;
      }

      id = R.id.landmarkDescription;
      TextView landmarkDescription = ViewBindings.findChildViewById(rootView, id);
      if (landmarkDescription == null) {
        break missingId;
      }

      id = R.id.landmarkHistory;
      TextView landmarkHistory = ViewBindings.findChildViewById(rootView, id);
      if (landmarkHistory == null) {
        break missingId;
      }

      id = R.id.landmarkLocation;
      TextView landmarkLocation = ViewBindings.findChildViewById(rootView, id);
      if (landmarkLocation == null) {
        break missingId;
      }

      id = R.id.landmarkTitle;
      TextView landmarkTitle = ViewBindings.findChildViewById(rootView, id);
      if (landmarkTitle == null) {
        break missingId;
      }

      id = R.id.toolbar;
      MaterialToolbar toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      id = R.id.webDataCard;
      MaterialCardView webDataCard = ViewBindings.findChildViewById(rootView, id);
      if (webDataCard == null) {
        break missingId;
      }

      id = R.id.webDataContent;
      TextView webDataContent = ViewBindings.findChildViewById(rootView, id);
      if (webDataContent == null) {
        break missingId;
      }

      return new FragmentLandmarkDetailBinding((CoordinatorLayout) rootView, btnLoadMore, fabMap,
          imageTabLayout, imageViewPager, landmarkDescription, landmarkHistory, landmarkLocation,
          landmarkTitle, toolbar, webDataCard, webDataContent);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
